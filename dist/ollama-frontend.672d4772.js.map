{"mappings":"AAAA,MAAM,UAAU,SAAS,cAAc,CAAC;AACxC,MAAM,cAAc,SAAS,cAAc,CAAC;AAC5C,MAAM,aAAa,SAAS,cAAc,CAAC;AAE3C,6CAA6C;AAC7C,eAAe;IACb,MAAM,SAAS,YAAY,KAAK;IAChC,IAAI,CAAC,QAAQ;IAEb,MAAM,WAAW,MAAM,MAAM,uCAAuC;QAChE,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;YACjB,OAAO;YACP,QAAQ;YACR,QAAQ;QACZ;IACJ;IAEA,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE;QAChC,QAAQ,KAAK,CAAC,4BAA4B,SAAS,MAAM,EAAE,SAAS,UAAU;QAC9E,QAAQ,SAAS,IAAI,CAAC,qCAAqC,CAAC;QAC5D;IACJ;IAEA,MAAM,SAAS,SAAS,IAAI,CAAC,SAAS;IACtC,MAAM,UAAU,IAAI;IACpB,IAAI,YAAY;IAEhB,MAAM,UAAU,SAAS,aAAa,CAAC;IACvC,QAAQ,SAAS,GAAG,CAAC,uBAAuB,EAAE,QAAQ;IACtD,QAAQ,WAAW,CAAC;IAEpB,MAAM,SAAS,SAAS,aAAa,CAAC;IACtC,OAAO,SAAS,GAAG,CAAC,sBAAsB,CAAC;IAC3C,QAAQ,WAAW,CAAC;IAEpB,QAAQ,SAAS,GAAG,QAAQ,YAAY;IAExC,MAAO,KAAM;QACT,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,OAAO,IAAI;QACzC,IAAI,MAAM;QAEV,MAAM,QAAQ,QAAQ,MAAM,CAAC,OAAO;YAAE,QAAQ;QAAK;QACnD,MAAM,QAAQ,MAAM,KAAK,CAAC,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,IAAI,OAAO;QAE/D,KAAK,MAAM,QAAQ,MACf,IAAI;YACA,MAAM,OAAO,KAAK,KAAK,CAAC;YACxB,IAAI,KAAK,QAAQ,EAAE;gBACf,aAAa,KAAK,QAAQ;gBAC1B,OAAO,SAAS,GAAG,CAAC,sBAAsB,EAAE,WAAW;gBACvD,QAAQ,SAAS,GAAG,QAAQ,YAAY;YAC5C;QACJ,EAAE,OAAO,KAAK;YACV,QAAQ,KAAK,CAAC,6BAA6B,KAAK;QACpD;IAER;AACF;AAGA,+CAA+C;AAC/C,SAAS,eAAe,MAAM,EAAE,OAAO;IACnC,MAAM,iBAAiB,SAAS,aAAa,CAAC;IAC9C,eAAe,SAAS,GAAG,GAAG,OAAO,EAAE,EAAE,SAAS;IAClD,QAAQ,WAAW,CAAC;IACpB,QAAQ,SAAS,GAAG,QAAQ,YAAY,EAAE,uBAAuB;AACrE;AAEA,qCAAqC;AACrC,WAAW,gBAAgB,CAAC,SAAS;AAErC,mDAAmD;AACnD,YAAY,gBAAgB,CAAC,SAAS,SAAU,KAAK;IACjD,IAAI,MAAM,GAAG,KAAK,SACd;AAER","sources":["script.js"],"sourcesContent":["const chatLog = document.getElementById(\"chat-log\");\r\nconst promptInput = document.getElementById(\"prompt-input\");\r\nconst sendButton = document.getElementById(\"send-button\");\r\n\r\n// Function to fetch data from the Ollama API\r\nasync function getResponse() {\r\n  const prompt = promptInput.value;\r\n  if (!prompt) return;\r\n\r\n  const response = await fetch('http://localhost:11434/api/generate', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n          model: 'gemma3:4b',\r\n          prompt: prompt,\r\n          stream: true\r\n      })\r\n  });\r\n\r\n  if (!response.ok || !response.body) {\r\n      console.error('Error fetching response:', response.status, response.statusText);\r\n      chatLog.innerHTML += `<p>Error: Could not get response.</p>`;\r\n      return;\r\n  }\r\n\r\n  const reader = response.body.getReader();\r\n  const decoder = new TextDecoder();\r\n  let fullReply = '';\r\n\r\n  const userMsg = document.createElement('div');\r\n  userMsg.innerHTML = `<strong>User:</strong> ${prompt}`;\r\n  chatLog.appendChild(userMsg);\r\n\r\n  const botMsg = document.createElement('div');\r\n  botMsg.innerHTML = `<strong>Bot:</strong> `;\r\n  chatLog.appendChild(botMsg);\r\n\r\n  chatLog.scrollTop = chatLog.scrollHeight;\r\n\r\n  while (true) {\r\n      const { value, done } = await reader.read();\r\n      if (done) break;\r\n\r\n      const chunk = decoder.decode(value, { stream: true });\r\n      const lines = chunk.split('\\n').filter(line => line.trim() !== '');\r\n\r\n      for (const line of lines) {\r\n          try {\r\n              const data = JSON.parse(line);\r\n              if (data.response) {\r\n                  fullReply += data.response;\r\n                  botMsg.innerHTML = `<strong>Bot:</strong> ${fullReply}`;\r\n                  chatLog.scrollTop = chatLog.scrollHeight;\r\n              }\r\n          } catch (err) {\r\n              console.error('Error parsing JSON chunk:', err, line);\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\n\r\n// Function to display messages in the chat log\r\nfunction displayMessage(sender, message) {\r\n    const messageElement = document.createElement(\"div\");\r\n    messageElement.innerHTML = `${sender}: ${message}`;\r\n    chatLog.appendChild(messageElement);\r\n    chatLog.scrollTop = chatLog.scrollHeight; // Scroll to the bottom\r\n}\r\n\r\n// Event listener for the Send button\r\nsendButton.addEventListener(\"click\", getResponse);\r\n\r\n// Event listener for Enter key in the prompt input\r\npromptInput.addEventListener(\"keyup\", function (event) {\r\n    if (event.key === \"Enter\") {\r\n        getResponse();\r\n    }\r\n});\r\n"],"names":[],"version":3,"file":"ollama-frontend.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}